swagger: "2.0"
info:
  title: "Savood"
  version: "1.0.0"
  description: "denn nur lebendiges food tut gut"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "savood.com"
basePath: "/v2"

tags:
- name: "profile"
  description: "Management of profiles and user representation"
- name: "offering"
  description: "Management of offered food items"
- name: "feed"
  description: "Collection of nearby offerings"
- name: "message"
  description: "Operations about user"
schemes:
- "http"

### PATHS ###
paths:
  /offering:
    post:
      tags:
      - "offering"
      summary: "Add a new offering"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Offering that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Offering"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Offering'
        '404':
          $ref: '#/responses/InvalidParameterInput'
  /offering/{id}:
    parameters:
      - in: path
        required: true
        name: id
        type: integer
    get:
      tags:
      - "offering"
      summary: "Display an offering"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Offering'
        '404':
          $ref: '#/responses/InvalidParameterInput'
    put:
      tags:
      - "offering"
      summary: "Update an offering"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Accepted; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'
    delete:
      tags:
      - "offering"
      summary: "Delete an offering"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Removed; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'

  /profile:
    post:
      tags:
      - "profile"
      summary: "Add a new profile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Offering that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Profile"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Profile'
        '404':
          $ref: '#/responses/InvalidParameterInput'
  /profile/{id}:
    parameters:
      - in: path
        required: true
        name: id
        type: integer
    get:
      tags:
      - "profile"
      summary: "Display an profile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Profile'
        '404':
          $ref: '#/responses/InvalidParameterInput'
    put:
      tags:
      - "profile"
      summary: "Update an profile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Accepted; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'
    delete:
      tags:
      - "profile"
      summary: "Delete an profile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Removed; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'
          
  /message:
    post:
      tags:
      - "message"
      summary: "Add a new message"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Message that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Message'
        '404':
          $ref: '#/responses/InvalidParameterInput'
  /message/{id}:
    parameters:
      - in: path
        required: true
        name: id
        type: integer
    get:
      tags:
      - "message"
      summary: "Display an message"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Message'
        '404':
          $ref: '#/responses/InvalidParameterInput'
    put:
      tags:
      - "message"
      summary: "Update an message"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Accepted; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'
    delete:
      tags:
      - "message"
      summary: "Delete an message"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '204':
          description: Removed; No response.
        '404':
          $ref: '#/responses/InvalidParameterInput'
    
  /feed:
    get:
      parameters:
        - in: query
          name: location
          required: true
          type: string
      tags:
      - "feed"
      summary: "Display an feed"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        '200':
          description: Object found and returned
          schema:
            $ref: '#/definitions/Message'
        '404':
          $ref: '#/responses/InvalidParameterInput'
  
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
    
### RESPONSES ###
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: "#/definitions/Error"
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: "#/definitions/Error"          
  
  InvalidParameterInput:
    description: Invalid parameter input was passed
    schema:
      $ref: "#/definitions/InvalidParameterInput"

### DEFINITIONS ###
definitions:
  Profile:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstname:
        type: "string"
      lastname:
        type: "string"
      email:
        type: "string"
        format: "email"
      telefon:
        type: "string"
        format: "telefon"
      address:
        type: "object"
        properties:
          street:
            type: "string"
          number:
            type: "integer"
            format: "int64"
          zip:
            type: "integer"
            format: "int64"
          city:
            type: "string"
      avatar-id:
        type: "string"
    xml:
      name: "Profile"
  Message:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      from-id:
        type: "integer"
        format: "int64"
      to-id:
        type: "integer"
        format: "int64"
      offering-id:
        type: "integer"
        format: "int64"
      content:
        type: "string"
      time:
        type: "string"
        format: "date-time"
      important:
        type: "boolean"
    xml:
      name: "Message"
  Offering:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      creator-id:
        type: "integer"
        format: "int64"
      best-by-date:
        type: "string"
        format: "date"
      location:
        type: "string"
      avatar-url:
        type: "string"
      requested-by:
        type: "integer"
        format: "int64"
    xml:
      name: "Offering"
  Feed:
    type: "array"
    items:
      $ref: '#/definitions/Offering'
    xml:
      name: "Feed"
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  InvalidParameterInput:
    type: object
    properties:
      attribute:
        type: string
      message:
        type: string
    required:
      - attribute
      - message       

